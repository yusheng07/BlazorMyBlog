@page "/admin/categories"
@*@using MyBlogServerSide.Components*@
@inject IMyBlogApi api
@attribute [Authorize]

<h3>Categories</h3>

<EditForm OnValidSubmit="Save" Model="Item">
    <DataAnnotationsValidator />
    <CustomCssClassProvider ProviderType="BootstrapFieldCssClassProvider" />
    <InputText @bind-Value="Item.Name" />
    <ValidationMessage For="@(()=>Item.Name)" />
    <button class="btn btn-success" type="submit">Save</button>
</EditForm>

<ItemList Items="Items" DeleteEvent="@Delete" SelectEvent="@Select" ItemType="Category">
    <ItemTemplate>
        @{
            var item = context as Category;
            if (item!=null)
            {
                @item.Name;
            }
        }
    </ItemTemplate>
</ItemList>

@code {
    private List<Category> Items { get; set; } = new List<Category>(); //hold all categories
    public Category Item { get; set; } = new Category(); //hold one item, the item being edited
    protected override async Task OnInitializedAsync()
    {
        Items = await api.GetCategoriesAsync();
        await base.OnInitializedAsync();
    }
    private async Task Delete(Category category)
    {
        try
        {
            await api.DeleteCategoryAsync(category);
            Items.Remove(category);
        }
        catch { }
    }
    private Task Select(Category category)
    {
        try
        {
            Item = category;
        }
        catch { }
        return Task.CompletedTask;
    }
    private async Task Save()
    {
        try
        {
            if (Item.Id == 0)
            {
                Items.Add(Item);
            }
            await api.SaveCategoryAsync(Item);
            Item = new Category();
        }
        catch { }
    }
}
